spring.application.name=UserService
# connect jdbc:sqlser
#spring.datasource.url=jdbc:sqlserver://localhost:1433;databaseName=UserService;trustServerCertificate=true
#spring.datasource.username=sa
#spring.datasource.password=123456789
#spring.datasource.driver-class-name=com.microsoft.sqlserver.jdbc.SQLServerDriver
#spring.jpa.show-sql=true
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.SQLServerDialect
# connect jdbc:mysql
# local
#spring.datasource.url=jdbc:mysql://${MYSQL_HOST:localhost}:${MYSQL_PORT:3306}/Userservice?createDatabaseIfNotExist=true
# docker
spring.datasource.url=jdbc:mysql://${MYSQL_HOST:mysql}:${MYSQL_PORT:3306}/UserService?createDatabaseIfNotExist=true
spring.datasource.username=${MYSQL_USER:root}
spring.datasource.password=${MYSQL_PASSWORD:123456789}
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
spring.jpa.properties.hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext
spring.jpa.properties.hibernate.id.new_generator_mappings=true
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.open-in-view=false
# port
server.port=8082
# redis
# local
#spring.data.redis.host=${SPRING_REDIS_HOST:localhost}
# docker
spring.data.redis.host=${SPRING_REDIS_HOST:redis}
spring.data.redis.port=${SPRING_REDIS_PORT:6379}
# eureka server url
# local
#eureka.client.service-url.default-zone=${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE:http://discovery:8761/eureka}
# docker
eureka.client.service-url.defaultZone=http://discovery:8761/eureka/
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true